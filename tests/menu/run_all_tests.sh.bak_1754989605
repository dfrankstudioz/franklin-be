#!/usr/bin/env bash
set -Eeuo pipefail

ROOT="$HOME/docker"
MENU_DIR="$ROOT/tests/menu"
LOG_DIR="$ROOT/logs"
mkdir -p "$LOG_DIR"
TS="$(date +%Y%m%d_%H%M%S)"
LOGFILE="$LOG_DIR/run_all_${TS}.log"

# Save original FDs for live updates BEFORE redirecting; mirror output to log
exec 3>&1 4>&2
exec > >(tee -a "$LOGFILE") 2>&1

SCRIPTS=(
  "api_tests.sh"
  "rag_tests.sh"
  "web_ui_tests.sh"
  "routing_tests.sh"
  "env_config_tests.sh"
  "docker_health_tests.sh"
  "logs_snapshot.sh"
  "plugins_tests.sh"
)

total=${#SCRIPTS[@]}
ok=0 fail=0

human() { local s=$1; printf "%02d:%02d:%02d" "$((s/3600))" "$(((s%3600)/60))" "$((s%60))"; }

# Draw a fixed-width bar with percent based on COMPLETED steps
draw_bar() {
  local completed=$1 total=$2 width=${3:-30}
  (( completed<0 )) && completed=0
  (( completed>total )) && completed=$total
  local pct=$(( completed * 100 / total ))
  local fill=$(( completed * width / total ))
  local rest=$(( width - fill ))
  printf "[%s%s] %3d%%" "$(printf '%*s' "$fill" '' | tr ' ' '#')" "$(printf '%*s' "$rest" '' | tr ' ' '-')" "$pct"
}

# Output mode: if FD 3 is a TTY we use single-line redraw; else print heartbeat lines
USE_TTY=0
if [[ -t 3 && "${TERM:-}" != "dumb" && -z "${RUN_ALL_NO_TTY:-}" ]]; then
  USE_TTY=1
fi

say_tty()   { [[ $USE_TTY -eq 1 ]] && printf "%s" "$*" >&3 || echo "$*"; }
redraw_tty(){ [[ $USE_TTY -eq 1 ]] && printf "\r\033[K%s" "$*" >&3 || echo "$*"; }

echo "Run ALL started at $(date '+%F %T')  → logging to $LOGFILE"
suite_start=$(date +%s)

for i in "${!SCRIPTS[@]}"; do
  step="${SCRIPTS[$i]}"
  completed=$i
  echo
  echo "=== Running $step ($(draw_bar "$completed" "$total")) ${completed}/${total} ==="

  start=$(date +%s)
  bash "$MENU_DIR/$step" &
  pid=$!

  last_hb=-1
  while kill -0 "$pid" 2>/dev/null; do
    now=$(( $(date +%s) - start ))
    line="Progress $(draw_bar "$completed" "$total") ${completed}/${total}  •  ${step}  •  elapsed $(human "$now")"
    redraw_tty "$line"
    if [[ $USE_TTY -eq 0 ]]; then
      # heartbeat every 5s to normal stdout so you see it over SSH even without TTY
      if (( now / 5 > last_hb )); then
        last_hb=$(( now / 5 ))
        echo "$line"
      fi
    fi
    sleep 1
  done

  status=0
  wait "$pid" || status=$?
  elapsed=$(( $(date +%s) - start ))
  [[ $USE_TTY -eq 1 ]] && printf "\r\033[K" >&3 || true

  if [[ $status -eq 0 ]]; then
    echo "✓ $step OK  (duration: $(human "$elapsed"))"
    ((ok++))
  else
    echo "✗ $step FAILED  (duration: $(human "$elapsed"))"
    ((fail++))
  fi

  # After finishing the step, bump completed and show final bar for this step
  completed=$((i+1))
  echo "Progress: $(draw_bar "$completed" "$total") ${completed}/${total}"
done

suite_elapsed=$(( $(date +%s) - suite_start ))
echo
echo "Summary: ${ok} OK, ${fail} failed  •  Total time: $(human "$suite_elapsed")"
exit 0
